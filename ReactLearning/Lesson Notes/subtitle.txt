Welcome to Components Lifecycle. After watching this video, you will be able to: Explain a component’s lifecycle and describe the different phases
of a component lifecycle. The life cycle of a React component represents the
different phases of the lifetime of a component. There are different lifecycle methods that React provides at
different phases of a component’s life. In addition to the three core
phases of the component lifecycle, there is a fourth phase, and the four phases are: Initialization: This is the phase where the component is
constructed with the given Props and default state. This is done in the constructor
of a Component Class. Mounting: Mounting is the phase of rendering
the JSX returned by the render method itself. Updating: Updating is the phase when
the state of a component is updated, and the application is repainted. And finally, there's Unmounting. As the name suggests, unmounting is
the final step of the component lifecycle where the component is removed from the page. The component lifecycle starts when
components are created or mounted on the DOM. Once mounted, they grow by updating, and then they die or are unmounted
on document object model or DOM. React automatically calls the responsible method
according to the phase in which the component is. These methods give you better
control over the components, and you can manipulate them using the methods. In the mounting phase, the
component is added to the DOM. In this phase, a new component is
created and inserted into the DOM. This is also the phase where
the component is initialized and rendered on the web page for the first time. This phase consists of two predefined functions: First, there's componentWillMount() Function. This function is invoked right before the component is mounted on the DOM or, in other words, before the
render() function is executed for the first time. Then we have componentDidMount() Function. This function is invoked right after the
component is mounted on the DOM or, in other words, after the
render() function is executed for the first time. The next phase is Updating, where the
states and props of a component change with the occurrence of some user events, such
as clicking or pressing a key on the keyboard. These changes can occur within the
component or through the backend. They trigger the render function again. The Updating phase consists
of the following methods: First, there's static
getDerivedStateFromProps method. This method is useful if you have updated props and you want to reflect that in the component's state. Then we have
shouldComponentUpdate method. It’s specifically intended for performance
optimization and can help avoid re-renders. However, the method is unreliable as you
might miss an update and encounter bugs. Next, there is the render() method, which
is the same render( ) method used in mounting, but here it updates the component. Another method,
the getSnapshotBeforeUpdate method, gives you access to the previous props and state
of the component before it's updated. And lastly we have the componentDidUpdate method. This is the last lifecycle method invoked in the update phase. It allows you to create side effects
like sending network requests or calling the this.setState method. The unmounting phase is the third
and final phase of a React component. At this phase, the component
is removed from the DOM. Unmounting only has one lifecycle
method involved: componentWillUnmount. This function is invoked before the
component is removed from the page, and it denotes the end of the lifecycle. In this video, you learned that: Components are created or mounted on the DOM; they grow by updating and then
die or are unmounted on DOM. This is referred to as a component lifecycle. In the mounting phase, the
component is added to the DOM. Updating is the phase where the states and props
of a component change when some user events occur. And, the unmounting phase is the third and final phase,
where the component is removed from the DOM.